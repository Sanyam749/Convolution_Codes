clc;clearvars;
function [encoded,G]=convolutional_encode(rate, Kc, ip)
ip=[ip, zeros(1, Kc - 1)];%adding 0s to flush
% Creating the G matrix for the given rate and constraint length
switch rate
 case 1/2
 switch Kc
 case 3
 G=[1 0 1;1 1 1];
 otherwise
 error('unsupported parameter');
 end
 case 1/3
 switch Kc
 case 4
 G=[1 1 0 1; 1 0 1 1;1 1 1 1 ];
 case 6
 G=[1 1 1 0 0 1;
 1 1 0 1 0 1;
 1 0 1 1 1 1];
 otherwise
 error('unsupported parameter');
 end
 otherwise
 error('unsupported parameter');
end
[~, Kc]=size(G);%to reverify the constraint length
buff=zeros(1, Kc);
encoded=[];
for bit=ip
 buff=[bit, buff(1:end-1)];
 out=mod(sum(G .* buff, 2), 2); %binary matrix multiplication i) we multiply element wise
ii) than we add the elements iii)we modulo 2 to keep it in the binary space
 encoded=[encoded, out']; % to keep it as a row vector itself
end
end
function [received, transmitted]=bpsk_awgn_channel(ip, EbN0_dB, rate)
EbN0=10^(EbN0_dB / 10);% as dB= log of EbN0 to the base 10
EsN0=EbN0 * rate;
